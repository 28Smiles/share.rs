name: Main

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install targets
      run: |
        sudo apt-get install -y mingw-w64
        rustup target add x86_64-pc-windows-gnu
        rustup target add x86_64-unknown-linux-gnu
        rustup component add clippy
        rustup component add rustfmt
        rustup component add llvm-tools-preview
    - name: Install Grcov
      run: curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar jxf -
    - name: RustFmt
      run: cargo fmt --check
    - name: RustFmt
      run: cargo clippy --all-targets --all-features -- -D warnings
    - name: Run tests
      run: |
        export RUSTFLAGS="-Cinstrument-coverage"
        cargo build --verbose
        LLVM_PROFILE_FILE="shares-%p-%m.profraw" cargo test --verbose
        ./grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info
        bash <(curl -s https://codecov.io/bash) -f lcov.info
    - name: Build Linux
      run: cargo build --target x86_64-unknown-linux-gnu --verbose --release
    - name: Create Linux artifacts
      run: |
        mkdir staging
        cp target/x86_64-unknown-linux-gnu/release/shares staging/shares
        cd staging
        zip shares-linux.zip shares
        tar -cvzf shares-linux.tar.gz shares
        rm shares
    - name: Build Windows
      run: cargo build --target x86_64-pc-windows-gnu --verbose --release
    - name: Create Windows artifacts
      run: |
        cp target/x86_64-pc-windows-gnu/release/shares.exe staging/shares.exe
        cd staging; zip shares-windows.zip shares.exe
        tar -cvzf shares-windows.tar.gz shares.exe
        rm shares.exe
    - uses: actions/upload-artifact@v2
      with:
        name: package
        path: staging
